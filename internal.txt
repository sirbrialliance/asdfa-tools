-------------------------------------------------------------------------
Tasks
-------------------------------------------------------------------------

- next:
	- xx robots.txt
	- logo

	- serial
		- xx connect
		- xx type text, see in console
		- xx feature availible test
		- xx push error to user (e.g. can't connect, mistyped options object)

		- if connected, confirm user leaving
		- first message from port is lost?
		- contenteditable gives funky text, things like <div><br></div> instead of "\n" causes issues
			- hit enter several times when blank, won't send
			- sending weird 0xC2 chars
	- midi
	- touch
	- browser info
		- IP, user agent, local ip, server ip, etc.
		- what http proocol we used to load the page (e.g. http/3)
	- basic webgl
		- spining cube thumb
		- something cool looking fractal for bigger
	- notes
	- speaker test
	- time

	- credits (convert to module)
	- xx hide search box since it's not implemented
	- first release






- credits/licenses
	- https://github.com/developit/hazelnut/blob/master/LICENSE
- https://web.tools/, asdfa.io?

-------------------------------------------------------------------------
Ideas
-------------------------------------------------------------------------

- framework/base
	- design: logo showing asdf a on keybaord to hint origin and help remind
	- maybe add a "go back" arrow next to the logo when not on the main page
	- Hit url for non extant module sends 404 but page loaded shows search based on what you tried
	- Source on GitHub, pull requests welcome
		- License is public domain like if you just grab some module code as an example and use it
		- Each module has view source button for tsx or resulting (formatted+commented) js.
	- Load and function as much as possible if Internet is down (and make it clear when in "offline mode" )
	- serve the original sources so source maps work deployed
	- works offline (PWA/manifest.json/background worker)
	- modules can have alternate names and typing one in the URL takes us to the real module
	- Firefox double-requests CSS?
	- sitemap.xml?
	- lookd/works decenty on mobile


- modules
	- Touch/multitouch
	- midi
	- controller inputs (and haptics?)
	- Webgl and feature tests
	- Wasm test
	- Camera/mic check (and pick from multiple sources)
		- can we do slow-mo capture?
		- Save audio clip (wav or mp3)
	- Basic speaker test, select an output, pan to any speaker (even past l/r)
	- Browser info:
		- User agent, and put a browsecap or related somewhere and tell what it says
		- List out all identifiable data we can did out of you browser.
	- Network tests:
		- Latency to assorted targets, dns lookup latency
			- (like to every amazon, google cloud, and Azur edatacenter)
		- (and use metrics to get page load times/etc)
		- bandwidth+latency test (open a handful of connections to local CloudFlare node running web workers, graph results and measure latency as you go, full duplex)
	- jot down notes, saved in browser, can export/import
		- bonus: option to save data by unique, random user key, keep changes on server for a week, other browsers with same key update their notes from sever ("No expectation of privacy", liability terms)
		- bonus: log into an oauth, like Google, and we'll save the data on their server
	- maybe have links to repl.it
	- IP, user agent, local ip, server ip, other such data we can glean from server or client
	- My favorite computer porgrams/settings
		- .bashrc (history writing, colors, autocompletion)
		- Altdrag, clasic start menu, greenshot, superf4, wirtuawin, console (2 or z)
			- any good porfile settings I tweak, or a .zip
	- Speech api test
	- Web workers test? Maybe give out a performance number?
	- Web serial, webusb, Web bluetooth
	- Other special browser apis?
	- link to browser spectre tests
	- New/exotic image formats (jpeg2000, apng, webp, flif, avif, jxl, etc.)
	- Color space, hdr check/test
	- Simple binary viewer/editor
	- Unicode codepoint lookup, also ASCII lookup
	- Random number, lines shuffle, using rand() with link to random.org
	- time.is, but without ads
		 - could we use time.cloudflare.com and CloudFlare workers?
	- Tar command line builder (and xkcd joke)
	- file hash calculation (drag and drop, automatically states if hashes match (or if they are exactly binary equal), or better yet, if the aren't equal calculate a number of hashes and warn about any collisions, or if just doing sums warn about slimiar not not exact hashes (esp. if more than 1 start or end chars match))
	- quick lookup for port numbers, mime-types
	- quick search box that starts focused, type a few letters of the module you want to interact, hit enter
	- load a remote site (as server), render image or pdf, show load timings, link to load speed sites, pick a place to request from?, inject cookies or headers?
		- and/or basic curl-style tester
		- needs rate/bandwidth/cpu limit
	- http "connect to any port" test (link)
	- post+cookies+other storage data endpoint/echo
	- quick api reference, for example rmemberinf in python you make a directory with os.mkdir
	- http status: what http proocol we used to load the page (e.g. http/3)
		- https://gf.dev/http3-test
	- enter specific date/time, show countdown (and the url can be re-used/shared)
	- js minifier/deep minifier

	- Serial:
		- add option to choose text encoding for send/recv (including hex and base64)
		- upload file, save recv'd data to file
		- pick line ending when you hit enter (\r, \n, \r\n, none)
		- webusb fallback?


